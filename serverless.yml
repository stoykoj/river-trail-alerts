service: river-trail-alerts

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  timeout: 30
  iamRoleStatements:
    - Effect: "Allow"
      Action: "*"
      Resource:
        Fn::GetAtt:
          - RiverTrailAlertsTable
          - Arn
    - Effect: "Allow"
      Action: "*"
      Resource: !Ref EmailSNSTopic

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux

functions:
  update:
    handler: handler.handle
    events:
      - schedule: rate(30 minutes)
    environment:
      EMAIL_SNS_TOPIC_ARN: !Ref EmailSNSTopic 
      DEPLOYMENT_STAGE: ${self:provider.stage}

resources:
  Resources:
    RiverTrailAlertsTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: RiverTrailAlertsTable-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: "pk"
            AttributeType: "S"
          - AttributeName: "sk"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "pk"
            KeyType: "HASH"
          - AttributeName: "sk"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 2
    EmailSNSTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        DisplayName: "RiverTrailAlerts"

